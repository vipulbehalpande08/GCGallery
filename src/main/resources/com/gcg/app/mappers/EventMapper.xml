<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gcg.app.dao.EventDao">
	
	<select id="getAllEvents" resultMap="eventsResultMap">
		select *
		from event 
	</select>
	
	<select id="getupcomingEvents" resultMap="eventsResultMap">
		select * 
		from event 
		where 
		start_date &gt; curDate()
		
	</select>
		
	<select id="getCurrentEvents" resultMap="eventsResultMap">
		select * 
		from event 
		where curDate() between start_date and end_date
	</select>
	<select id="getPastEvents" resultMap="eventsResultMap">
		select * from event where 
		end_date &lt; curDate() 
	</select>
	<insert id="addEvent" parameterType="com.gcg.app.beans.Event"
	useGeneratedKeys="true" keyProperty="eventId" keyColumn="event_id" flushCache="true">
		insert into event(
			 event_id, event_name, description, artist_id, is_paid, start_date, end_date,
			venue_id, gallery_path, category_id)
		values( #{eventId},#{eventName},#{description},#{artistId},#{isPaid},#{startDate},#{endDate}
				,#{venueId},#{galleryPath},#{categoryId});
		<selectKey keyProperty="eventId" resultType="int" order="AFTER">
        select last_insert_id();
       </selectKey>
	</insert>
	<update id="updateGalleryPathById" flushCache="true">
		update event 
		set gallery_path = #{galleryPath}
		where event_id = #{eventId}	
	</update>
	<update id="updateEvent" parameterType="com.gcg.app.beans.Event" flushCache="true">
		update event
		set 
		event_name = #{eventName},
		description = #{description},
		artist_id = #{artistId},
		start_date = #{startDate},
		end_date = #{endDate},
		venue_id = #{venueId},
		category_id = #{categoryId}
		where event_id = #{eventId}
	</update>
	<delete id="removeEventById" parameterType="int">
		delete from event
		where event_id = #{eventId}
	</delete>
	<select id="getFilteredEvents" parameterType="com.gcg.app.beans.Event"	resultMap="eventsResultMap"	>
		SELECT * FROM Event  
		<where> 
			<choose>
			    <when test="eventName != null and startDate != null and endDate != null">
			      event_name like #{eventName} AND start_date &gt; #{startDate} AND end_date &lt; #{endDate} 
			    </when>
			    	   
			    <otherwise>
				    <choose>
					    <when test="eventName != null and startDate == null and endDate == null">
					      event_name like #{eventName} 
					    </when>
					    
					    <when test="startDate != null and eventName == null and endDate == null">
					      start_date &gt;= #{startDate}  AND (start_date &lt; #{startDate}  AND end_date &gt;= #{startDate} )
					    </when>
				
					    <when test="endDate != null and eventName == null and startDate == null">
					      end_date &gt;= curDate() AND end_date &lt;= #{endDate} 
					    </when>
			
					    <when test="startDate != null and endDate != null and eventName == null ">
					      start_date &gt;= #{startDate} AND end_date &lt;= #{endDate} 
					    </when>	
					</choose>  
			    </otherwise>
		  	</choose>
		  	</where>
		  	<choose>
			  	<when test="sortingKey == 1">
			  		order by start_date
			  	</when>
			  	<when test="sortingKey == 2">
			  		order by end_date
			  	</when>
			  	<otherwise>
			  		order by event_name
			  	</otherwise>
		  	</choose>
	  	 
	</select>
	<resultMap type="com.gcg.app.beans.Event" id="eventsResultMap">
		<id column="event_id" property="eventId"></id>
		<result column="event_name" property="eventName"></result>
		<result column="description" property="description"></result>
		<result column="artist_id" property="artistId"></result>
		<result column="is_Paid" property="isPaid"></result>
		<result column="start_date" property="startDate"></result>
		<result column="end_date" property="endDate"></result>
		<result column="venue_id" property="venueId"></result>
		<result column="gallery_path" property="galleryPath"></result>
		<result column="category_id" property="categoryId"></result>
	</resultMap>
</mapper>